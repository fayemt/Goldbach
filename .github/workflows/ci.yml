name: CI (tests + paper + release)

permissions:
  contents: write  # required to upload release assets

on:
  push:
    branches: ["**"]
    tags: ["v*"]
  pull_request:
  release:
    types: [published]   # run when you publish a release via the UI
  workflow_dispatch:

jobs:
  python-tests:
    name: Python tests
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run tests
        run: pytest -q

  build-paper:
    name: Build LaTeX (paper/main.tex)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compile LaTeX (latexmk + bibtex)
        uses: xu-cheng/latex-action@v3
        with:
          root_file: main.tex
          working_directory: paper
          args: -pdf -interaction=nonstopmode -halt-on-error -bibtex

      - name: Verify output exists
        run: test -f paper/main.pdf

      - name: Compute checksums
        run: |
          sha256sum paper/main.pdf > SHA256SUMS
          if [ -f goldbach-full-release.zip ]; then sha256sum goldbach-full-release.zip >> SHA256SUMS; fi
          cat SHA256SUMS

      - name: Build arXiv source zip (main.tex + refs.bib)
        run: |
          mkdir -p dist
          zip -q dist/goldbach-arxiv-src.zip paper/main.tex paper/refs.bib
          ls -l dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: paper-and-checks
          path: |
            paper/main.pdf
            SHA256SUMS
            dist/goldbach-arxiv-src.zip
          if-no-files-found: error

  release:
    name: Release on tag or published release
    needs: [python-tests, build-paper]
    # Run on tag pushes OR on a published release event
    if: |
      github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') ||
      github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: paper-and-checks
          path: ./_artifacts

      - name: Create source zip from current ref (for release)
        run: |
          REF="${GITHUB_REF_NAME}"
          if [ "${{ github.event_name }}" = "release" ]; then REF="${{ github.event.release.tag_name }}"; fi
          git archive --format=zip --output goldbach-${REF}.zip ${REF}

      - name: Read SHA256SUMS
        id: readhash
        run: |
          echo "hashes<<EOF" >> $GITHUB_OUTPUT
          cat _artifacts/SHA256SUMS >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Publish / Update GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || github.ref_name }}
          name: Goldbach Project ${{ github.event_name == 'release' && github.event.release.tag_name || github.ref_name }}
          allowUpdates: true            # <-- attach assets to an existing release if one exists
          omitBodyDuringUpdate: true
          makeLatest: true
          body: |
            See CHANGELOG.md for details.

            SHA-256:
            ${{ steps.readhash.outputs.hashes }}
          artifacts: >-
            _artifacts/paper/main.pdf,
            _artifacts/SHA256SUMS,
            _artifacts/dist/goldbach-arxiv-src.zip,
            goldbach-${{ github.event_name == 'release' && github.event.release.tag_name || github.ref_name }}.zip
          artifactErrorsFailBuild: true
